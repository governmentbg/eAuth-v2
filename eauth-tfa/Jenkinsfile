pipeline {
    agent any

    tools {nodejs "nodeJS_12"}

    stages {
//        stage('Checkout code') {
//            steps {
//                checkout scm
//            }
//        }
        
        stage('Install') { 
            steps {
                nodejs(nodeJSInstallationName: 'nodeJS_12') {
                    sh 'npm config ls'
                    sh 'npm install'
                }
                updateGitlabCommitStatus name: 'install', state: 'pending'
                updateGitlabCommitStatus name: 'install', state: 'success'
            }
        }

        stage('Lint') {
            steps {
                nodejs (nodeJSInstallationName: 'nodeJS_12'){
                    sh 'npm run eslint'
                }
                
                updateGitlabCommitStatus name: 'codeStyle', state: 'pending'
                updateGitlabCommitStatus name: 'codeStyle', state: 'success'
            }
        }

        stage('Unit Test') {
            steps {
                nodejs (nodeJSInstallationName: 'nodeJS_12'){
                    sh 'ng test --no-watch --code-coverage'
                }
                updateGitlabCommitStatus name: 'test', state: 'pending'
                updateGitlabCommitStatus name: 'test', state: 'success'
            }
        }

        // stage('Sonar') {
        //     steps {
        //         sh 'npm run sonar'
        //         updateGitlabCommitStatus name: 'build', state: 'pending'
        //         updateGitlabCommitStatus name: 'build', state: 'success'
        //     }
        // }

        stage('Build') {
            steps {
                nodejs (nodeJSInstallationName: 'nodeJS_12'){
                    sh 'ng build --configuration stage'
                }
                updateGitlabCommitStatus name: 'build', state: 'pending'
                updateGitlabCommitStatus name: 'build', state: 'success'
            }
        }

        stage('Deploy') {
            steps {
                sshPublisher(
                    publishers: [
                        sshPublisherDesc(
                            configName: 'eAuth-frontend', 
                            transfers: [
                                sshTransfer(
                                    cleanRemote: false, 
                                    excludes: '', 
                                    execCommand: '''
                                        echo ${eauth_frontend_pass} | sudo -S rm -r /var/www/html/eauth/*
                                        echo ${eauth_frontend_pass} | sudo -S cp -a /home/bulsiadmin/dist/eAuth-twoFA/.  /var/www/html/eauth/
                                    ''', 
                                    execTimeout: 120000, 
                                    flatten: false, 
                                    makeEmptyDirs: false, 
                                    noDefaultExcludes: false, 
                                    patternSeparator: '[, ]+', 
                                    remoteDirectory: '', 
                                    remoteDirectorySDF: false, 
                                    removePrefix: '', 
                                    sourceFiles: 'dist/')], 
                                    usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)
                                ]
                            )
                updateGitlabCommitStatus name: 'deploy', state: 'pending'
                updateGitlabCommitStatus name: 'deploy', state: 'success'
            }
        }
    }
}